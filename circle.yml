version: 2
jobs:
  orderservice:
    docker:
      #https://github.com/circleci/circleci-images/blob/master/openjdk/generate-images
      - image: circleci/openjdk:8-jdk

    environment:
      TEST_REPORTS: /tmp/test-reports
      DOCKER_IMAGE: microsoft/pumrp-order
      DOCKER_TAG: 1.0.0
      SERVICE_PORT: 8080
      GIT_FOLDER: OrderSrvc

    working_directory: ~/circleci

    branches:
      ignore:
        - develop
        - /feature-.*/

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build Service
          command: |
            cd $GIT_FOLDER &&
            gradle build

      - run:
          name: Copy Service Test Results
          command: |
            set -xu
            mkdir -p $TEST_REPORTS/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} $TEST_REPORTS/junit/ \;
            #This dir contains html test output
            #mkdir -p ${TEST_REPORTS}/order
            #cp -r OrderSrvc/build/reports/tests/* ${TEST_REPORTS}/order

      #- run: |
      #    cp OrderSrvc/build/libs/*.jar /tmp/artifacts

      # Save artifacts
      #- store_artifacts:
      #    path: /tmp/artifacts
      #    destination: build

      # Upload test results
      - store_test_results:
          path: /tmp/test-reports/junit/

      - run:
          name: Build and Push Service Docker Image
          command: |
            TAG=$DOCKER_TAG.$CIRCLE_BUILD_NUM
            docker build -f $GIT_FOLDER/Dockerfile --build-arg port=$SERVICE_PORT --build-arg mongo_connection=mongodb://localhost/$GIT_FOLDER --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKER_IMAGE:$TAG .
            #docker login -u $DOCKER_USER -p $DOCKER_PASS
            #docker push $DOCKER_IMAGE:$TAG

  quoteservice:
    docker:
      #https://github.com/circleci/circleci-images/blob/master/openjdk/generate-images
      - image: circleci/openjdk:8-jdk

    environment:
      TEST_REPORTS: /tmp/test-reports
      DOCKER_IMAGE: microsoft/pumrp-quote
      DOCKER_TAG: 1.0.0
      SERVICE_PORT: 8080
      GIT_FOLDER: QuoteSrvc

    working_directory: ~/circleci

    branches:
      ignore:
        - develop
        - /feature-.*/

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build Service
          command: |
            cd $GIT_FOLDER &&
            gradle build

      - run:
          name: Copy Service Test Results
          command: |
            set -xu
            mkdir -p $TEST_REPORTS/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} $TEST_REPORTS/junit/ \;
            #This dir contains html test output
            #mkdir -p ${TEST_REPORTS}/order
            #cp -r $GIT_FOLDER/build/reports/tests/* ${TEST_REPORTS}/order

      #- run: |
      #    cp $GIT_FOLDER/build/libs/*.jar /tmp/artifacts

      # Save artifacts
      #- store_artifacts:
      #    path: /tmp/artifacts
      #    destination: build

      # Upload test results
      - store_test_results:
          path: /tmp/test-reports/junit/

      - run:
          name: Build and Push Service Docker Image
          command: |
            TAG=$DOCKER_TAG.$CIRCLE_BUILD_NUM
            docker build -f $GIT_FOLDER/Dockerfile --build-arg port=$SERVICE_PORT --build-arg mongo_connection=mongodb://localhost/$GIT_FOLDER --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKER_IMAGE:$TAG .
            #docker login -u $DOCKER_USER -p $DOCKER_PASS
            #docker push $DOCKER_IMAGE:$TAG

  shipmentservice:
    docker:
      #https://github.com/circleci/circleci-images/blob/master/openjdk/generate-images
      - image: circleci/openjdk:8-jdk

    environment:
      TEST_REPORTS: /tmp/test-reports
      DOCKER_IMAGE: microsoft/pumrp-shipment
      DOCKER_TAG: 1.0.0
      SERVICE_PORT: 8080
      GIT_FOLDER: ShipmentSrvc

    working_directory: ~/circleci

    branches:
      ignore:
        - develop
        - /feature-.*/

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build Service
          command: |
            cd $GIT_FOLDER &&
            gradle build

      - run:
          name: Copy Service Test Results
          command: |
            set -xu
            mkdir -p $TEST_REPORTS/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} $TEST_REPORTS/junit/ \;
            #This dir contains html test output
            #mkdir -p ${TEST_REPORTS}/order
            #cp -r $GIT_FOLDER/build/reports/tests/* ${TEST_REPORTS}/order

      #- run: |
      #    cp $GIT_FOLDER/build/libs/*.jar /tmp/artifacts

      # Save artifacts
      #- store_artifacts:
      #    path: /tmp/artifacts
      #    destination: build

      # Upload test results
      - store_test_results:
          path: /tmp/test-reports/junit/

      - run:
          name: Build and Push Service Docker Image
          command: |
            TAG=$DOCKER_TAG.$CIRCLE_BUILD_NUM
            docker build -f $GIT_FOLDER/Dockerfile --build-arg port=$SERVICE_PORT --build-arg mongo_connection=mongodb://localhost/$GIT_FOLDER --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKER_IMAGE:$TAG .
            #docker login -u $DOCKER_USER -p $DOCKER_PASS
            #docker push $DOCKER_IMAGE:$TAG

  catalogservice:
    docker:
      #https://github.com/circleci/circleci-images/blob/master/openjdk/generate-images
      - image: circleci/openjdk:8-jdk

    environment:
      TEST_REPORTS: /tmp/test-reports
      DOCKER_IMAGE: microsoft/pumrp-catalog
      DOCKER_TAG: 1.0.0
      SERVICE_PORT: 8080
      GIT_FOLDER: CatalogSrvc

    working_directory: ~/circleci

    branches:
      ignore:
        - develop
        - /feature-.*/

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build Service
          command: |
            cd $GIT_FOLDER &&
            gradle build

      - run:
          name: Copy Service Test Results
          command: |
            set -xu
            mkdir -p $TEST_REPORTS/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} $TEST_REPORTS/junit/ \;
            #This dir contains html test output
            #mkdir -p ${TEST_REPORTS}/order
            #cp -r $GIT_FOLDER/build/reports/tests/* ${TEST_REPORTS}/order

      #- run: |
      #    cp $GIT_FOLDER/build/libs/*.jar /tmp/artifacts

      # Save artifacts
      #- store_artifacts:
      #    path: /tmp/artifacts
      #    destination: build

      # Upload test results
      - store_test_results:
          path: /tmp/test-reports/junit/

      - run:
          name: Build and Push Service Docker Image
          command: |
            TAG=$DOCKER_TAG.$CIRCLE_BUILD_NUM
            docker build -f $GIT_FOLDER/Dockerfile --build-arg port=$SERVICE_PORT --build-arg mongo_connection=mongodb://localhost/$GIT_FOLDER --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` -t $DOCKER_IMAGE:$TAG .
            #docker login -u $DOCKER_USER -p $DOCKER_PASS
            #docker push $DOCKER_IMAGE:$TAG

workflows:
  version: 2
  build-services-in-parallel:
    jobs:
      - orderservice
      - quoteservice
      - shipmentservice
      - catalogservice